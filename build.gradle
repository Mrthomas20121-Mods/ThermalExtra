plugins {
    id 'net.neoforged.gradle' version '[6.0.18,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

version = mod_version
group = 'mrthomas20121.thermal_extra'
archivesBaseName = 'ThermalExtra'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'parchment', version: "${parchment_version}-${mc_version}"

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            property 'forge.logging.console.level', 'debug'

            mods {
                thermal_extra {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            property 'forge.logging.console.level', 'debug'

            mods {
                thermal_extra {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            args '--mod', 'thermal_extra', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                thermal_extra {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url = 'https://maven.minecraftforge.net/' }
    maven {
        name 'Thermal Maven'
        url 'https://maven.covers1624.net/'
    }
    maven { // TOP
        url 'https://maven.tterrag.com/'
    }
    maven { // JEI and Tinkers
        url 'https://dvs1.progwml6.com/files/maven/'
    }
    maven { // Patchouli
        url 'https://maven.blamejared.com/'
    }
    maven { // Curios
        url 'https://maven.theillusivec4.top/'
    }
    maven {
        name "cf"
        url "https://cursemaven.com/"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft "net.neoforged:forge:${mc_version}-${neoforge_version}"

    // compile against the JEI API but do not include it at runtime
    compileOnly fg.deobf("mezz.jei:jei-${mc_version}-common-api:${jei_version}")
    compileOnly fg.deobf("mezz.jei:jei-${mc_version}-forge-api:${jei_version}")

    // at runtime, use the full JEI
    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}-common:${jei_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}-forge:${jei_version}")

    compileOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}:api")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}")

    //compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}:api")
    //runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}")

    //compileOnly fg.deobf("com.blamejared.crafttweaker:CraftTweaker-forge-${minecraft_version}:${crt_version}")

    implementation fg.deobf("com.teamcofh:cofh_core:${mc_version}-${cofh_core_version}")
    implementation fg.deobf("com.teamcofh:thermal_core:${mc_version}-${thermal_core_version}")
    implementation fg.deobf("com.teamcofh:thermal_cultivation:${mc_version}-${thermal_cultivation_version}")
    implementation fg.deobf("com.teamcofh:thermal_foundation:${mc_version}-${thermal_foundation_version}")
    implementation fg.deobf("com.teamcofh:thermal_expansion:${mc_version}-${thermal_expansion_version}")
    implementation fg.deobf("com.teamcofh:thermal_innovation:${mc_version}-${thermal_innovation_version}")

    //implementation fg.deobf("slimeknights.tconstruct:TConstruct:${minecraft_version}-${tcon_version}")
    //implementation fg.deobf("slimeknights.mantle:Mantle:${minecraft_version}-${mantle_version}")
}

jar {
    manifest {
        attributes([
            "Specification-Title": "ThermalExtra",
            "Specification-Vendor": "Mrthomas20121",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": project.version,
            "Implementation-Vendor" : "thermal_extra",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')
